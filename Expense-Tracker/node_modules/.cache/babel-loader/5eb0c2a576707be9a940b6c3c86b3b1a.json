{"ast":null,"code":"var _jsxFileName = \"/home/techno51/ReactLearning/Expense-Tracker/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewExpense(props) {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const newExpenseHandler = expense => {\n    const expenseData = { ...expense,\n      id: Math.random().toString()\n    };\n    props.onSaveNewExpense(expenseData);\n  };\n\n  const addNewExpense = () => {\n    setIsEditing(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense \",\n    children: [isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onNewExpense: newExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewExpense,\n      children: \" Add New Expense \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/home/techno51/ReactLearning/Expense-Tracker/src/components/NewExpense/NewExpense.js"],"names":["ExpenseForm","useState","NewExpense","props","isEditing","setIsEditing","newExpenseHandler","expense","expenseData","id","Math","random","toString","onSaveNewExpense","addNewExpense"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BJ,QAAQ,CAAC,KAAD,CAA3C;;AAEA,QAAMK,iBAAiB,GAAIC,OAAD,IAAY;AAClC,UAAMC,WAAW,GAAG,EAChB,GAAGD,OADa;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFY,KAApB;AAIAT,IAAAA,KAAK,CAACU,gBAAN,CAAuBL,WAAvB;AACH,GAND;;AAQA,QAAMM,aAAa,GAAG,MAAK;AACvBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eACKD,SAAS,iBAAI,QAAC,WAAD;AAAa,MAAA,YAAY,EAAIE;AAA7B;AAAA;AAAA;AAAA;AAAA,YADlB,EAEK,CAACF,SAAD,iBAAc;AAAQ,MAAA,OAAO,EAAGU,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAvBQZ,U;;KAAAA,U;AAyBT,eAAeA,UAAf","sourcesContent":["import './NewExpense.css'\nimport ExpenseForm from './ExpenseForm'\nimport { useState } from 'react'\n\nfunction NewExpense(props){\n\n    const [isEditing, setIsEditing] =  useState(false)\n\n    const newExpenseHandler = (expense) =>{\n        const expenseData = {\n            ...expense,\n            id: Math.random().toString()\n        };\n        props.onSaveNewExpense(expenseData)\n    }\n\n    const addNewExpense = () =>{\n        setIsEditing(true) \n    }\n\n    return (\n        <div className='new-expense '>\n            {isEditing && <ExpenseForm onNewExpense = {newExpenseHandler}/>}\n            {!isEditing && <button onClick={ addNewExpense }> Add New Expense </button>}\n\n        </div>\n    )\n}\n\nexport default NewExpense"]},"metadata":{},"sourceType":"module"}