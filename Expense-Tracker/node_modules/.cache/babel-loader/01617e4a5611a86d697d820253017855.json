{"ast":null,"code":"var _jsxFileName = \"/home/techno51/ReactLearning/Expense-Tracker/src/components/Chart/Chart.js\";\nimport './Chart.css';\nimport ChartBar from './ChartBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      lable: dataPoint.lable\n    }, dataPoint.lable, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Chart;\n;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/techno51/ReactLearning/Expense-Tracker/src/components/Chart/Chart.js"],"names":["ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","lable"],"mappings":";AAAA,OAAO,aAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAEjB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBC,SAAD,iBACnB,QAAC,QAAD;AAEK,MAAA,KAAK,EAAIA,SAAS,CAACC,KAFxB;AAGK,MAAA,QAAQ,EAAIC,YAHjB;AAIK,MAAA,KAAK,EAAIF,SAAS,CAACK;AAJxB,OACYL,SAAS,CAACK,KADtB;AAAA;AAAA;AAAA;AAAA,YADF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAjBQV,K;AAiBR;AAED,eAAeA,KAAf","sourcesContent":["import './Chart.css'\nimport ChartBar from './ChartBar';\n\nfunction Chart(props){  \n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues)\n\n    return (\n        <div className='chart'>\n            {props.dataPoints.map((dataPoint) => (\n               <ChartBar \n                    key = {dataPoint.lable}\n                    value = {dataPoint.value}\n                    maxValue = {totalMaximum}\n                    lable = {dataPoint.lable}\n               /> \n            ))}\n        </div>\n    )\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}